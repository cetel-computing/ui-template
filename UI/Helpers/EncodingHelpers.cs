using System;
using System.Text;

namespace FlazorTemplate.Helpers
{
    public static class EncodingHelpers
    {
        /// <summary>
        /// Encodes the contents of a byte array into a URL-safe base-64 string.
        /// </summary>
        /// <param name="bytes">The raw bytes.</param>
        /// <returns></returns>
        public static string UrlSafeEncode(byte[] bytes)
        {
            // Base-64 encode the string, then replace the "+", "=" and "/" characters with URL-safe
            // equivalents. If you use HttpUtility.UrlEncode (or similar methods) the URL will trigger
            // IIS's double-escaping check.
            // https://docs.microsoft.com/en-us/iis/manage/configuring-security/use-request-filtering#filter-double-encoded-requests
            return new StringBuilder(Convert.ToBase64String(bytes))
                .Replace("+", ".")
                .Replace("/", "_")
                .Replace("=", "-")
                .ToString();
        }

        /// <summary>
        /// Encodes the contents of a string generated by <see cref="UrlSafeEncode(byte[])"/> into a byte array.
        /// </summary>
        /// <param name="encoded">The encoded string.</param>
        /// <returns></returns>
        public static byte[] UrlSafeDecode(string encoded)
        {
            // Base-64 encode the string, then replace the "+", "=" and "/" characters with URL-safe
            // equivalents. If you use HttpUtility.UrlEncode (or similar methods) the URL will trigger
            // IIS's double-escaping check.
            // https://docs.microsoft.com/en-us/iis/manage/configuring-security/use-request-filtering#filter-double-encoded-requests
            return Convert.FromBase64String(
                new StringBuilder(encoded)
                .Replace(".", "+")
                .Replace("_", "/")
                .Replace("-", "=")
                .ToString());
        }
    }
}
